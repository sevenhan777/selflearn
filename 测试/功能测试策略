功能测试策略
第一步：理解需求
🔍 明确“功能应该干什么”。

阅读需求文档（PRD）、设计说明、接口文档。

搞清楚每个功能的“输入 → 处理 → 输出”逻辑。

举例说明：登录功能 → 用户输入账号密码 → 验证 → 登录成功或失败提示。

第二步：拆解功能点
📌 把一个大功能拆成多个小功能点进行覆盖。

例如注册功能可拆为：

邮箱输入校验

密码输入校验

验证码输入及获取

注册按钮是否可点

注册成功流程

第三步：设计测试用例
🧪 通过各种输入场景来验证功能的稳定性与正确性。

每个用例包括：

编号：唯一标识（如 TC001）

测试目的：验证点

输入条件：用什么数据测

操作步骤：怎么测

预期结果：系统应该表现出什么

📌 示例用例：

编号	功能点	测试目的	输入	预期结果
TC001	登录	正常账号登录	正确账号+密码	跳转到首页
TC002	登录	空密码	账号+空密码	提示“密码不能为空”
TC003	注册	邮箱格式校验	“abc.com”	提示“邮箱格式错误”

第四步：执行测试
👩‍💻 手动/自动执行用例，看功能表现是否与预期一致。

按用例执行步骤逐项验证功能。

记录结果：通过（Pass）/ 失败（Fail）/ 阻塞（Blocked）。

发现问题及时记录 Bug（包括截图、日志、复现步骤）。

第五步：回归测试
🔁 修复 Bug 后要再测试一次，确保新问题没有产生。

对修复Bug的功能点重新测试

同时验证相关联模块是否受影响（回归范围）

测试方法：
功能测试的常用测试方法汇总
测试方法	简要说明	示例
等价类划分	把所有输入分成有效和无效的“等价类”，每类选代表来测试	年龄字段测试：选 18（有效类）、-1（无效类）
边界值分析	测试输入的边界附近值（最大、最小、0、空等）	密码长度要求6~16，测试 5、6、16、17 字符
错误推测法	基于经验，猜测开发最可能犯错的地方并设计用例	表单提交后是否验证了所有字段
因果图法	根据输入条件和输出结果建立因果关系图，设计复杂逻辑测试	如果A且B发生 → 才能跳转页面
判定表测试法	当输入条件组合较多时，列出所有条件+动作的表格来覆盖各种情况	用户角色A+B+C+状态X+Y 时对应不同处理逻辑
状态迁移测试	系统状态之间有转换（比如登录状态→登出），测试状态变化是否正常	登录 → 访问首页 → 注销 → 点击返回首页 → 应跳转登录页
场景法（用例法）	按真实用户行为路径写用例，测试完整业务流程	搜索商品 → 加入购物车 → 下单 → 支付
随机测试（探索式）	没有明确规则，随机输入/点击/操作，观察系统是否出错	快速点击某按钮、输入很大的数据、特殊符号

一、使用 因果图法 的时机：
📌 目的：帮助你理清多个输入条件和输出之间的逻辑关系（可视化）

适用情况：

有多个条件，且条件之间有逻辑关系（如 AND / OR / NOT）

输出受条件组合逻辑影响，难以直接枚举所有情况

希望通过图形化方式理解复杂业务规则（先理逻辑、再转化为用例）

示例使用场景：

审批流程（多个条件组合才通过）

配置规则（多个配置开关控制系统行为）

UI显示控制（多个状态影响按钮是否可用）

📌 举例：

用户想开启“高级功能”，必须同时满足：已购买 Pro 版本 + 已完成实名认证 + 网络稳定。适合先用因果图理清逻辑结构。
