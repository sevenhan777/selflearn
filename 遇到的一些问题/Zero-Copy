DMA
无：
1. cpu发出指令读磁盘
2. 磁盘准备数据放到磁盘控制器缓冲区然后产生中断
3. cpu 读取数据放大自己的寄存器，在写入到内存
有
1. 用户发起请求，讲数据写入自己的缓冲区
2. 操作系统将请求发送给DMA控制器
3. DMA将请求发给磁盘
4. 磁盘把数据准备好向DMA发起中断
5. DMA收到磁盘信号讲数据拷贝到内核缓冲区
6. DMA收到足够多的数据后向cpu发起中断
7. cpu收到后将内核空间数据发给用户空间
**早起DMA控制器在主板上，现在越来越多的IO设备上也有DMA控制器

zero copy
无：
4次拷贝
磁盘到内核（DMA） 内核到用户空间（CPU） 用户空间到内核scoket缓冲区 内核到网卡缓冲区
有
mmap  + write  减少一次内核到用户的拷贝，但是4次上下文切换
sendfile 减少一次系统调用
SG-DMA 可以直接将内核缓冲区的数据放到网卡缓冲区 减少了 内核到socket缓冲区拷贝
mmap 和 sendfile 的区别除了上面的还有返回值不同，mmap返回的是具体文件内容，sendfile 返回文件长度，对于一些需要文件内容的场景
就要使用mmap,但是性能会差

page cache
前面的一次拷贝，从磁盘到内核缓冲区， 这个内核缓冲区就是page cache
他的优点在于预读数据，合并写数据
pagecache 不适合大文件场景
1. 大文件占据pagecache 空间， 其他小文件命中率下降
2. 大文件本身的部分内容再次命中的概率低，反而浪费了一次DMA拷贝
3. 大文件的读通常要绕过pagecache
