普通网络通信（如 TCP）大致流程：
用户态 → 拷贝到内核 → 协议栈处理（TCP/IP） → 网络传输 → 接收端协议栈 → 用户态
痛点是无论是发送端还是接收端，都要经历两次拷贝和4次上下文切换
https://wiki.h3c.com/cn/detail.html?WikiName=RDMA
RDMA
1. 零拷贝，数据不再需要从内核拷贝到用户空间，再拷贝回去，允许绕过cpu和操作系统直接从
发送端内存拷贝到接收端内存
2. 内核旁路，允许应用程序直接法界数据传输避免用户态内核态切换
3. 除了前期准备阶段，传输阶段全由支持rdma的硬件设备操作，不需要CPU参与

关键数据结构
工作队列
qp 一个qp有两个wq(sq,rq)
一个请求是一个wqe(包含源内存地址，目的内存地址，数据长度，和key)
已经设备从wq中取出wqe,然后根据里面的内容进行传输
完成队列
cq,传输任务完成后，会将结果cqe添加到cq
工作请求&工作完成
wq和cq室内和的概念，用户并没有办法直接使用因此需要与之对应的用户态概念wr wc
进行数据传输时，应用程序会调用Verbs API接口向QP下发WR。QP收到WR后会将其转换为WQE存放到WQ中。同理，完成数据传输后，CQ中的CQE会被转换为WC，返回给应用程序

怎么做到的：
1. 通过verbs api 直接与底层硬件通信，
  注册内存
  MR是指在内存中划分一片特定的区域，用于存放通信过程中发送或接收的数据。完成MR操作后，RDMA网卡才能访问这片特定的内存区域
  MR 包括
      虚拟地址，长度以及用于转换成物理地址的页表
      key:内存区域的Key，用于校验RDMA操作对内存区域的访问权限
      L_Key用于校验本端内存区域的访问权限。当本端的应用进程希望访问本地的内存区域时，其工作请求中必须携带正确的L_Key。RDMA网卡会校验其传递的L_Key，校验通过后，RDMA网卡才能根据Key中的索引访问相应的内存区域。
      R_Key用于校验远端内存区域的访问权限。当本端的应用进程希望访问远端的内存区域时，其工作请求中必须携带正确的R_Key。响应端的RDMA网卡会校验其传递的R_Key，校验通过后，RDMA网卡才能根据Key中的索引访问相应的内存区域
      怎么通过这个key完成校验的？
      虽然 L_Key/R_Key 在用户态表现为一个整型值，但 RNIC 会在内部管理一个“内存注册表”，每一项（内存区域）类似于包含以下内容：
      字段	描述
      起始地址	该 MR 对应的物理内存起始地址
      长度	该 MR 的大小
      权限	本地写、本地读、远程读、远程写、远程原子操作
      状态	有效/无效
      L_Key	本地访问需要匹配的 key
      R_Key	远程访问需要匹配的 key（可以是相同也可以不同）
      索引/Handle	内部索引，实际 L_Key/R_Key 可能是这个值混合生成的
      内存区域锁定：为了防止换页机制导致记录VA与PA的映射表失效，内存注册操作会将划分出的内存区域锁定在物理内存中，直至通信完成
      
  QP建链
  QP建链是指建立QP之间的连接通道，用于协商或交换通信所需的必要参数信息。QP建链是RDMA通信前的必要准备工作，建链完成后，通信的两端才可以使用事先约定的QP和参数进行数据传输
  为确保RDMA通信顺利进行，QP建链时，通信的两端通常会交换以下信息：
  GID（Global Identifier，全局ID）：GID是InfiniBand中定义的全局唯一标识符。在RDMA通信中，GID用于标识和寻址网络中的节点设备或端口。

  •QPN（Queue Pairs Number，队列对号）：QPN是节点内QP的唯一标识符。节点内部通过QPN来标识和管理QP。QPN不具有全局性，不同节点内的QPN可以重复。通过GID和QPN的组合，可以在RDMA网络中唯一确定一个QP。

  •VA：VA是进行RDMA通信时，应用进程希望使用的内存虚拟地址。

  •R_Key：R_Key用于校验远端内存区域的访问权限。对于RDMA单端操作，通信的两端需要在QP建链时提前交换R_Key，供数据传输过程中进行权限校验。

  •Q_Key：Q_Key即Queue Key，是UD服务类型中专用的Key，用于校验数据报的合法性。在UD服务类型的RDMA通信中，工作请求中必须携带正确的Q_Key，否则接收端会丢弃该数据报。因此，通信的两端需要在QP建链时提前交换Q_Key，供数据传输过程中进行权限校验。
  执行数据传输
  参与通信的两端必须完成QP创建、CQ创建、内存注册、QP建链等工作，为QP间的通信做好准备
  1. send recive 双端操作
      Send和Receive是RDMA中常用的双端操作，通常用于传输一些数据量较小的控制信息
      控制信息包括什么？
  2. write read 单端操作
  
rdma 实现
InfiniBand 中如何寻址？
InfiniBand 网络中不使用 IP，而使用如下机制：
GUID：每个 HCA（主机通道适配器）具有全局唯一标识符
LID：Local Identifier，在本地子网中唯一
子网管理器（Subnet Manager）负责地址分配和路径查找
应用通过 libibverbs 创建连接，使用 IB verbs 进行通信

InfiniBand 自己实现传输层 网络层 链路层 物理层 
ROCE 兼容以太网，v1使用以太网链路层封装IB报文， V2使用tcp ip 封装

下面这些工作是需要cpu 参与的
 1. 内存注册（Memory Registration）
 2. Queue Pair（QP）建立与连接（Connection Establishment）
 3. Work Request（WR）提交与 Polling（轮询）

1. 数据搬运阶段（Data Movement）
RDMA Engine（NIC）使用 DMA 引擎将数据直接搬运到本地或远端内存；
不经过内核、不触发中断、不使用 CPU；
