https://xiaolincoding.com/os/8_network_system/selete_poll_epoll.html#i-o-%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8

C10问题 ，一个服务器如何处理一万个请求
多进程， 进程的创建和销毁，内存资源的占用，scoket数量的限制
多线程，同样存在类似的问题，不过更轻量级，但是资源使用也很多
io多路复用
一个进程分时复用处理多个socket

处理过程： 
1. 用户态获取socket 实际就是文件描述符（是所有文件描述符，上面可能有事件也可能没有）
2. 传给内核，内核判断哪些socket 有事件，再返回给用户态
3. 用户态处理这些事件

select poll epoll 他们的作用是从内核中获取多个就绪的事件，传给用户，用户态再用一个进程去处理这些事件

缓冲io 与 非缓冲io
用户读写后，先缓存起来，然后再调用系统调用来下发IO
直接io与非直接io
是否绕过内核缓存，绕过内核缓存，直接通过文件系统写入磁盘
阻塞io/非注射  同步/异步

阻塞
等待内核数据准备好，数据从内核发到用户缓冲区 阻塞在这两步
非阻塞
发起请求后，立即返回，然后不断轮询查看是否数据已经到达应用缓冲区

io 分为两个过程
1. 准备数据阶段，这个阶段数据在内核里
2. 将内核中数据传到应用程序缓冲区

同步IO 中无论是阻塞还是非阻塞 都会阻塞在第二步
异步IO 则两个步骤都不阻塞

